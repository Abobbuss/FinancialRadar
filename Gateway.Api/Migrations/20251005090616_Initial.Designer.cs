// <auto-generated />
using System;
using System.Text.Json;
using Gateway.Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gateway.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005090616_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.ActualRules", b =>
                {
                    b.Property<Guid>("RuleKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("rule_key");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<long>("RuleVersionId")
                        .HasColumnType("bigint")
                        .HasColumnName("rule_version_id");

                    b.HasKey("RuleKey")
                        .HasName("pk_actual_rules");

                    b.HasIndex("RuleVersionId")
                        .HasDatabaseName("ix_actual_rules_rule_version_id");

                    b.ToTable("actual_rules", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.DataType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("pk_data_types");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_data_types_code");

                    b.ToTable("data_types", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.PolicyConstant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_policy_constants");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_policy_constants_code");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_policy_constants_type_id");

                    b.ToTable("policy_constants", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleEvaluation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsPassed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_passed");

                    b.Property<long>("RuleVersionId")
                        .HasColumnType("bigint")
                        .HasColumnName("rule_version_id");

                    b.Property<long>("TransactionResultId")
                        .HasColumnType("bigint")
                        .HasColumnName("transaction_result_id");

                    b.HasKey("Id")
                        .HasName("pk_rule_evaluations");

                    b.HasIndex("RuleVersionId")
                        .HasDatabaseName("ix_rule_evaluations_rule_version_id");

                    b.HasIndex("TransactionResultId", "RuleVersionId")
                        .IsUnique()
                        .HasDatabaseName("ix_rule_evaluations_transaction_result_id_rule_version_id");

                    b.ToTable("rule_evaluations", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("DataTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("data_type_id");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("ValueDomainId")
                        .HasColumnType("integer")
                        .HasColumnName("value_domain_id");

                    b.HasKey("Id")
                        .HasName("pk_rule_fields");

                    b.HasIndex("DataTypeId")
                        .HasDatabaseName("ix_rule_fields_data_type_id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_rule_fields_name");

                    b.HasIndex("ValueDomainId")
                        .HasDatabaseName("ix_rule_fields_value_domain_id");

                    b.ToTable("rule_fields", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleFieldOperator", b =>
                {
                    b.Property<int>("FieldId")
                        .HasColumnType("integer")
                        .HasColumnName("field_id");

                    b.Property<int>("OperatorId")
                        .HasColumnType("integer")
                        .HasColumnName("operator_id");

                    b.Property<string>("Constraints")
                        .HasColumnType("text")
                        .HasColumnName("constraints");

                    b.Property<string>("ValueSource")
                        .HasColumnType("text")
                        .HasColumnName("value_source");

                    b.HasKey("FieldId", "OperatorId")
                        .HasName("pk_rule_field_operators");

                    b.HasIndex("OperatorId")
                        .HasDatabaseName("ix_rule_field_operators_operator_id");

                    b.ToTable("rule_field_operators", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.HasKey("Id")
                        .HasName("pk_rule_operators");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_rule_operators_code");

                    b.ToTable("rule_operators", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<JsonDocument>("Description")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("description");

                    b.Property<string>("DisplayDescription")
                        .HasColumnType("text")
                        .HasColumnName("display_description");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<Guid>("RuleKey")
                        .HasColumnType("uuid")
                        .HasColumnName("rule_key");

                    b.Property<int>("Version")
                        .HasColumnType("integer")
                        .HasColumnName("version");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("pk_rule_versions");

                    b.HasIndex("RuleKey", "Version")
                        .IsUnique()
                        .HasDatabaseName("ix_rule_versions_rule_key_version");

                    b.ToTable("rule_versions", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<string>("BankFrom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bank_from");

                    b.Property<string>("BankTo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bank_to");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer")
                        .HasColumnName("currency_id");

                    b.Property<Guid>("GlobalId")
                        .HasColumnType("uuid")
                        .HasColumnName("global_id");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transaction_date");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("CurrencyId")
                        .HasDatabaseName("ix_transactions_currency_id");

                    b.HasIndex("GlobalId")
                        .IsUnique()
                        .HasDatabaseName("ix_transactions_global_id");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.TransactionResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer")
                        .HasColumnName("currency_id");

                    b.Property<decimal>("RiskScore")
                        .HasColumnType("numeric")
                        .HasColumnName("risk_score");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint")
                        .HasColumnName("transaction_id");

                    b.HasKey("Id")
                        .HasName("pk_transaction_results");

                    b.HasIndex("CurrencyId")
                        .HasDatabaseName("ix_transaction_results_currency_id");

                    b.HasIndex("TransactionId")
                        .IsUnique()
                        .HasDatabaseName("ix_transaction_results_transaction_id");

                    b.ToTable("transaction_results", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.ValueDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.HasKey("Id")
                        .HasName("pk_value_domains");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_value_domains_code");

                    b.ToTable("value_domains", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.ValueDomainValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("DataTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("data_type_id");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("label");

                    b.Property<int>("ValueDomainId")
                        .HasColumnType("integer")
                        .HasColumnName("value_domain_id");

                    b.HasKey("Id")
                        .HasName("pk_value_domain_values");

                    b.HasIndex("DataTypeId")
                        .HasDatabaseName("ix_value_domain_values_data_type_id");

                    b.HasIndex("ValueDomainId", "Code")
                        .IsUnique()
                        .HasDatabaseName("ix_value_domain_values_value_domain_id_code");

                    b.ToTable("value_domain_values", (string)null);
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.ActualRules", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.RuleVersion", "RuleVersion")
                        .WithMany()
                        .HasForeignKey("RuleVersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_actual_rules_rule_versions_rule_version_id");

                    b.Navigation("RuleVersion");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.PolicyConstant", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.DataType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_policy_constants_data_types_type_id");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleEvaluation", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.RuleVersion", "RuleVersion")
                        .WithMany()
                        .HasForeignKey("RuleVersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rule_evaluations_rule_versions_rule_version_id");

                    b.HasOne("Gateway.Api.Persistence.Entities.TransactionResult", "TransactionResult")
                        .WithMany("Evaluations")
                        .HasForeignKey("TransactionResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rule_evaluations_transaction_results_transaction_result_id");

                    b.Navigation("RuleVersion");

                    b.Navigation("TransactionResult");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleField", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.DataType", "DataType")
                        .WithMany()
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rule_fields_data_types_data_type_id");

                    b.HasOne("Gateway.Api.Persistence.Entities.ValueDomain", "ValueDomain")
                        .WithMany()
                        .HasForeignKey("ValueDomainId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_rule_fields_value_domains_value_domain_id");

                    b.Navigation("DataType");

                    b.Navigation("ValueDomain");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleFieldOperator", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.RuleField", "Field")
                        .WithMany("Operators")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rule_field_operators_rule_fields_field_id");

                    b.HasOne("Gateway.Api.Persistence.Entities.RuleOperator", "Operator")
                        .WithMany("Fields")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rule_field_operators_rule_operators_operator_id");

                    b.Navigation("Field");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.Transaction", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.ValueDomainValue", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_value_domain_values_currency_id");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.TransactionResult", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.ValueDomainValue", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_results_value_domain_values_currency_id");

                    b.HasOne("Gateway.Api.Persistence.Entities.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_results_transactions_transaction_id");

                    b.Navigation("Currency");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.ValueDomainValue", b =>
                {
                    b.HasOne("Gateway.Api.Persistence.Entities.DataType", "DataType")
                        .WithMany()
                        .HasForeignKey("DataTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_value_domain_values_data_types_data_type_id");

                    b.HasOne("Gateway.Api.Persistence.Entities.ValueDomain", "ValueDomain")
                        .WithMany("Values")
                        .HasForeignKey("ValueDomainId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_value_domain_values_value_domains_value_domain_id");

                    b.Navigation("DataType");

                    b.Navigation("ValueDomain");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleField", b =>
                {
                    b.Navigation("Operators");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.RuleOperator", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.TransactionResult", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("Gateway.Api.Persistence.Entities.ValueDomain", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
